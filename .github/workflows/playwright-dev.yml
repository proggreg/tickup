name: Playwright Tests (Dev Server)
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: |
        # Set environment variables to handle oxc-parser issues
        export OXC_PARSER_SKIP_NATIVE=true
        export NODE_OPTIONS="--max-old-space-size=4096 --no-warnings"
        
        # Install dependencies
        pnpm install --no-frozen-lockfile --ignore-scripts
      
    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps
      
    - name: Start the dev server
      run: |
        # Set environment variables for dev server
        export OXC_PARSER_SKIP_NATIVE=true
        export NODE_OPTIONS="--max-old-space-size=4096 --no-warnings"
        
        # Start the dev server in background with better error handling
        nohup pnpm run dev > server.log 2>&1 &
        echo $! > server.pid
        
        # Wait a moment for the server to start
        sleep 10
        
        # Check if the server is running
        if ps -p $(cat server.pid) > /dev/null; then
          echo "Server started successfully with PID $(cat server.pid)"
        else
          echo "Server failed to start. Logs:"
          cat server.log
          exit 1
        fi
        
    - name: Wait for dev server to be ready
      run: |
        # Wait for the server to be ready with better error handling
        timeout 120 bash -c '
          while ! curl -f http://localhost:3000 > /dev/null 2>&1; do
            echo "Waiting for server to be ready..."
            sleep 5
          done
          echo "Server is ready!"
        ' || {
          echo "Server failed to start within timeout. Logs:"
          cat server.log
          exit 1
        }
        
    - name: Show server logs if available
      if: failure()
      run: |
        if [ -f server.log ]; then
          echo "=== Server Logs ==="
          cat server.log
        fi
        if [ -f server.pid ]; then
          echo "=== Server PID ==="
          cat server.pid
        fi
        
    - name: Run Playwright tests
      run: pnpm exec playwright test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: |
          playwright-report/
          test-results/
        retention-days: 30 